<?xml version="1.0" encoding="UTF-8"?>
<!-- JBoss, Home of Professional Open Source Copyright 2013, Red Hat, Inc. 
	and/or its affiliates, and individual contributors by the @authors tag. See 
	the copyright.txt in the distribution for a full listing of individual contributors. 
	Licensed under the Apache License, Version 2.0 (the "License"); you may not 
	use this file except in compliance with the License. You may obtain a copy 
	of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required 
	by applicable law or agreed to in writing, software distributed under the 
	License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS 
	OF ANY KIND, either express or implied. See the License for the specific 
	language governing permissions and limitations under the License. -->
<!-- This is the OSGi Blueprint XML file defining the Camel context and routes. 
	Because the file is in the OSGI-INF/blueprint directory inside our JAR, it 
	will be automatically activated as soon as the artifact is installed. The 
	root element for any OSGi Blueprint file is 'blueprint' - you also see the 
	namespace definitions for both the Blueprint and the Camel namespaces. -->
<blueprint xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:camel-cxf="http://camel.apache.org/schema/blueprint/cxf"
	xsi:schemaLocation="
             http://www.osgi.org/xmlns/blueprint/v1.0.0 http://www.osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd
             http://camel.apache.org/schema/blueprint http://camel.apache.org/schema/blueprint/camel-blueprint.xsd
             http://camel.apache.org/schema/blueprint/cxf http://camel.apache.org/schema/blueprint/cxf/camel-cxf.xsd">

	<!-- This is where we define our routes. The main route here simply connects 
		the SOAP endpoint to the REST client -->
	<camelContext id="service-camel-context"
		xmlns="http://camel.apache.org/schema/blueprint" xmlns:order="http://fusesource.com/examples/order/v7">
		<route id="mainRoute" customId="true">
			<from uri="cxf:bean:saferBusEndpoint?headerFilterStrategy=#dropAllMessageHeadersStrategy" />
			<to uri="cxfrs:bean:saferBusRestClient?httpClientAPI=false" />
		</route>
	</camelContext>

	<!-- This is the private SOAP endpoint. CXF will generate the WSDL from 
		the java interface -->
	<camel-cxf:cxfEndpoint id="saferBusEndpoint"
		address="/SaferBus" serviceClass="com.imc.fmcsa.soap.SaferBusImpl">

		<camel-cxf:inInterceptors>
			<bean class="org.apache.cxf.ws.security.wss4j.WSS4JInInterceptor">
				<property name="properties">
					<map>
						<entry key="action" value="UsernameToken" />
						<entry key="passwordType" value="PasswordText" />
					</map>
				</property>
			</bean>
			<bean id="authenticationInterceptor"
				class="org.apache.cxf.interceptor.security.JAASLoginInterceptor">
				<property name="contextName" value="karaf" />
			</bean>
		</camel-cxf:inInterceptors>
		<camel-cxf:properties>
			<entry key="ws-security.validate.token" value="false" />
		</camel-cxf:properties>
	</camel-cxf:cxfEndpoint>

	<!-- This is the REST client we will use to consume the public api. It is 
		also automatically configured from the java interface. -->
	<camel-cxf:rsClient id="saferBusRestClient"
		serviceClass="com.imc.fmcsa.unified.SaferBus"
        address="https://mobile.fmcsa.dot.gov/saferbus/resource/v1?webKey=${fmcsa.webkey}" />

	<bean id="dropAllMessageHeadersStrategy"
		class="org.apache.camel.component.cxf.common.header.CxfHeaderFilterStrategy">
		<!-- Set relayHeaders to false to drop all SOAP headers -->
		<property name="relayHeaders" value="false" />
	</bean>


</blueprint>
